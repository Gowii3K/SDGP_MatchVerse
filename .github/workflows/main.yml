name: Build and Deploy to Azure App Service

on:
  push:
    branches:
      - app-service-deployment
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: match-verse-server/package-lock.json

      - name: Install Dependencies
        run: |
          cd match-verse-server
          npm ci --omit=dev # Install only production dependencies

      - name: Generate Prisma Client
        run: |
          cd match-verse-server
          npx prisma generate

      - name: Run Prisma Migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          cd match-verse-server
          npx prisma migrate deploy

      - name: Build Application
        run: |
          cd match-verse-server
          npm run build

      - name: Set Azure App Service Configurations
        run: |
          az webapp config appsettings set --name matchverse \
          --resource-group <RESOURCE_GROUP> \
          --settings SCM_DO_BUILD_DURING_DEPLOYMENT=false

      - name: Prepare for Deployment
        run: |
          cd match-verse-server
          npm ci --omit=dev  # Ensure only production dependencies are included

          # Create startup script
          echo '#!/bin/sh
          cd /home/site/wwwroot
          node main.js' > run.sh
          chmod +x run.sh

      - name: Zip Application for Deployment
        run: |
          cd match-verse-server
          zip -r ../app.zip . deployment run.sh package*.json node_modules dist prisma

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: matchverse
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: app.zip
          clean: true  # Ensures a clean deployment by removing old files
